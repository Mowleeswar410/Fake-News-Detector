# -*- coding: utf-8 -*-
"""DetectingFakeNewswithRandomForest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wZyJCo23jsL4RTUTw412AOWHx4b1a707
"""

import pandas as pd
from google.colab import files
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder

uploaded = files.upload()

data = pd.read_csv("cleaned_dataset.csv")

data.head()

X = data["title"]
y = data["label"]

tfidf_vectorizer = TfidfVectorizer(max_features=5000,stop_words="english")
X_tfidf = tfidf_vectorizer.fit_transform(X)

label_encoder = LabelEncoder()
y_encoded = label_encoder.fit_transform(y)

random_forest_classifier = RandomForestClassifier(n_estimators=100, random_state=42)
random_forest_classifier.fit(X_tfidf,y_encoded)

def fakenewsprediction(title):
  title_tfidf = tfidf_vectorizer.transform([title])
  prediction = random_forest_classifier.predict(title_tfidf)
  predicted_label = label_encoder.inverse_transform(prediction)
  return predicted_label[0]

title_input = "Few reasons for optimism after Antony Blinken's diplomatic dash"
prediction = fakenewsprediction(title_input)
print(f"Prediction: {prediction}")