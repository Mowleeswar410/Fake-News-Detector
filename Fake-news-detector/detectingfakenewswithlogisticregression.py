# -*- coding: utf-8 -*-
"""DetectingFakeNewswithLogisticRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16QUGD1jvXKK64-7PXXbUUAoS4JCka_rX
"""

import pandas as pd
from google.colab import files
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import LabelEncoder

uploaded = files.upload()

data = pd.read_csv("cleaned_dataset.csv")

data.head()

missing_data = data[["text","label"]].isnull().any(axis=1)
if missing_data.any():
  print("Missing Values Found in the Dataset. Handle Missing Data Before Proceeding")
else:
  le = LabelEncoder()
  data["label"] = le.fit_transform(data["label"])
  X = data["text"]
  y = data["label"]
  X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=42)
  text_feature_extraction = TfidfVectorizer(max_features=5000,stop_words="english")
  model = LogisticRegression()
  pipeline = Pipeline([
      ('tfidf',text_feature_extraction),
      ('model',model)
  ])
  pipeline.fit(X_train,y_train)
  y_pred = pipeline.predict(X_test)
  accuracy = accuracy_score(y_test,y_pred)
  print(f"Accuracy: {accuracy:.2f}")
  def fakenewsprediction(text):
    input_data = [text]
    prediction = pipeline.predict(input_data)
    if prediction[0] == 0:
      return "Real News"
    else:
      return "Fake News"

article_input = "Stocks rallied sharply after the Labor Department said nonfarm payrolls rose by 150,000 in October â€” 20,000 fewer than expected but a difference attributable pretty much completely to the auto strikes, which appear to be over."
prediction = fakenewsprediction(article_input)
print(f"Prediction: {prediction}")